# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Install dependencies
    - name: Install dependent libraries
      run: |
        sudo apt-get update && sudo apt-get install libgsl-dev libgsl23 libgslcblas0
        sudo apt-get install gawk
        dpkg -L libgsl-dev
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U numpy
        pip install -U git+https://bitbucket.org/andrewpeterson/amp
        pip install -U soaplite
        pip install -U dscribe
        pip install -U numpy scipy pytest sympy
        git clone https://gitlab.com/qmml/qmmlpack.git
        gawk '{gsub(/res = run\(\[file_cpp_test_exe/,"res = \"\" #res = run([file_cpp_test_exe");};1' qmmlpack/make > qmmlpack/new_make
        cd qmmlpack
        chmod 700 new_make
        ./new_make -v --debug --cpp-compiler g++ --blas-lapack gsl --include-path="/usr/include/gsl" --library-path="/usr/lib" cpp
        ./new_make -v --debug --cpp-compiler g++ --blas-lapack gsl --include-path="/usr/include/gsl" --library-path="/usr/lib" python
        sudo ./new_make -v install
        cd ${{ github.workspace }}
        export PYTHONPATH="/usr/local/qmmlpack/python:$PYTHONPATH"
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # Setup Julia environment
    - name: Setup Julia environment
      uses: julia-actions/setup-julia@latest
      with:
        # The Julia version to download (if necessary) and use.
        version: 1.3
        # Display InteractiveUtils.versioninfo() after installing
        show-versioninfo: true # optional, default is false
    - run: |
        using InteractiveUtils; versioninfo()
        using Pkg
        pkg"activate ."
        pkg"registry add https://github.com/JuliaRegistries/General.git"
        pkg"registry add https://github.com/JuliaMolSim/MolSim.git"
        pkg"registry add https://github.com/DescriptorZoo/DescriptorReg.git"
        pkg"test DescriptorZoo"
      shell: bash -c "PYTHONPATH=/usr/local/qmmlpack/python:$PYTHONPATH julia --color=yes --project {0}"
